loadmodule "tm.so"
loadmodule "sl.so"
loadmodule "pv.so"
loadmodule "xlog.so"
loadmodule "textops.so"
loadmodule "rr.so"
loadmodule "pua.so"
loadmodule "presence.so"
loadmodule "presence_dialoginfo.so"
loadmodule "presence_xml.so"
loadmodule "tmx.so"
loadmodule "db_sqlite.so"
modparam("tm", "contacts_avp", "tm_contacts");
modparam("tm", "contact_flows_avp", "tm_contact_flows");
modparam("presence", "db_url","sqlite:///etc/kamailio/kamailio.db");
modparam("presence_xml", "db_url","sqlite:///etc/kamailio/kamailio.db");
modparam("pua", "db_url","sqlite:///etc/kamailio/kamailio.db");
modparam("pua", "db_mode", 2)
modparam("presence_xml", "xcap_table", "xcap")
modparam("presence_xml", "integrated_xcap_server", 1)
modparam("presence", "server_address", "sip:10.18.200.7:5060");
modparam("presence", "subs_db_mode", 3)
modparam("presence", "notifier_processes", 2)
modparam("presence", "expires_offset", 60)
modparam("presence", "send_fast_notify", 0)
modparam("presence", "clean_period", 0)
modparam("presence", "max_expires", 3600)
modparam("presence", "publ_cache", 0)
modparam("presence", "sip_uri_match", 1)
modparam("presence", "waitn_time", 1)
modparam("presence", "fetch_rows", 1000)
modparam("presence", "notifier_processes", 0)
#modparam("presence", "force_active", 1)

modparam("presence_dialoginfo", "default_expires", 3600)
modparam("presence_dialoginfo", "force_single_dialog", 1)


listen=udp:10.18.200.7:5060
#debug=0

request_route {

if(is_method("NOTIFY")){

                sl_send_reply("200", "OK");
		exit;
}

if(is_method("OPTIONS")){

                sl_send_reply("200", "KeepAlive");
		exit;
}

 if (is_method("SUBSCRIBE")) {
            if (!t_precheck_trans()) {
                t_newtran();
            }
            if (!handle_subscribe()) {
                sl_send_reply("403", "Forbidden");
                exit;
            }
            exit;
        }

        if (is_method("PUBLISH")) {
            if (!t_precheck_trans()) {
                t_newtran();
            }
            if (!handle_publish()) {
                sl_send_reply("403", "Forbidden");
                exit;
            }
            exit;
        }



}

#event_route[presence:notify-reply]
#{
#  xlog("received message = $notify_reply($mb)\n");
#}
